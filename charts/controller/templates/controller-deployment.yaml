apiVersion: apps/v1
kind: Deployment
metadata:
  name: drycc-controller
  labels:
    heritage: drycc
  annotations:
    component.drycc.cc/version: {{ .Values.imageTag }}
spec:
  replicas: {{ .Values.replicas }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  selector:
    matchLabels:
      app: drycc-controller
  template:
    metadata:
      labels:
        app: drycc-controller
    spec:
      {{- include "common.affinities.pods.soft" (dict "key" "app" "values" (list "drycc-controller")) | indent 6 }}
      serviceAccount: drycc-controller
      initContainers:
      - name: drycc-controller-init
        image: {{.Values.imageRegistry}}/{{.Values.imageOrg}}/python-dev:latest
        imagePullPolicy: {{.Values.imagePullPolicy}}
        args:
        - netcat
        - -v
        - -u
        - $(DRYCC_DATABASE_URL),$(DRYCC_RABBITMQ_URL)
        - -a
        - $(DRYCC_REDIS_ADDRS)
        {{- include "controller.envs" . | indent 8 }}
      containers:
      - name: drycc-controller
        image: {{.Values.imageRegistry}}/{{.Values.imageOrg}}/controller:{{.Values.imageTag}}
        imagePullPolicy: {{.Values.imagePullPolicy}}
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8000
          initialDelaySeconds: 30
          timeoutSeconds: 10
        readinessProbe:
          httpGet:
            path: /readiness
            port: 8000
          initialDelaySeconds: 30
          timeoutSeconds: 10
          periodSeconds: 5
        ports:
          - containerPort: 8000
            name: http
        {{- include "controller.limits" . | indent 8 }}
        {{- include "controller.envs" . | indent 8 }}
